---
import { Image } from "@astrojs/image/components";
import Icon from "../Icon.astro";

const { research, as: Element = "div" } = Astro.props;

// Function to determine icon based on link key
const getIcon = (key: string) => {
	const lowerKey = key.toLowerCase();
	if (lowerKey.includes("arxiv")) {
		return "arxiv";
	} else if (lowerKey.includes("code") || lowerKey.includes("github")) {
		return "github";
	} else if (lowerKey.includes("pdf")) {
		return "pdf";
	} else if (lowerKey.includes("paper") || lowerKey.includes("publication")) {
		return "paper";
	} else if (lowerKey.includes("video") || lowerKey.includes("demo")) {
		return "video";
	} else if (lowerKey.includes("website") || lowerKey.includes("site")) {
		return "website";
	} else if (lowerKey.includes("overview") || lowerKey.includes("project")) {
		return "link";
	} else if (lowerKey.includes("slides")) {
		return "slides";
	} else if (lowerKey.includes("poster")) {
		return "poster";
	}
	return "link";
};

const getIconTitle = (key: string) => {
	const lowerKey = key.toLowerCase();
	if (lowerKey.includes("arxiv")) return "arXiv";
	if (lowerKey.includes("code") || lowerKey.includes("github")) return "Code";
	if (lowerKey.includes("pdf")) return "PDF";
	if (lowerKey.includes("paper") || lowerKey.includes("publication")) return "Paper";
	if (lowerKey.includes("video") || lowerKey.includes("demo")) return "Video";
	if (lowerKey.includes("website") || lowerKey.includes("site")) return "Website";
	if (lowerKey.includes("overview") || lowerKey.includes("project")) return "Project";
	if (lowerKey.includes("slides")) return "Slides";
	if (lowerKey.includes("poster")) return "Poster";
	return key;
};

// Get the paper link from the links object
const paperLink = Object.entries(research.data.links).find(([key]) => 
	key.toLowerCase().includes("paper") || key.toLowerCase().includes("publication")
)?.[1] as string || `/research/${research.slug}`;
---

<Element class="group relative rounded-lg border border-gray-200 bg-white p-6 shadow-sm dark:border-gray-700 dark:bg-gray-800">
	<div class="flex flex-col gap-6 sm:flex-row">
		<!-- Image Section -->
		<div class="flex w-full shrink-0 items-center justify-center sm:w-48">
			<a 
				href={paperLink} 
				target={paperLink.startsWith("/") ? "_self" : "_blank"}
				rel={paperLink.startsWith("/") ? "" : "noopener noreferrer"}
				class="block overflow-hidden rounded-lg"
			>
				<Image 
					src={research.data.feature} 
					alt={research.data.title} 
					height={192} 
					width={192}
					aspectRatio={1} 
					class="object-cover"
				/>
			</a>
		</div>

		<!-- Content Section -->
		<div class="flex flex-1 flex-col">
			<!-- Title -->
			<a 
				href={paperLink} 
				target={paperLink.startsWith("/") ? "_self" : "_blank"}
				rel={paperLink.startsWith("/") ? "" : "noopener noreferrer"}
				class="group/title mb-2"
			>
				<h2 class="text-lg font-semibold text-gray-900 transition-colors group-hover/title:text-accent dark:text-white dark:group-hover/title:text-accent-2">
					{research.data.title}
				</h2>
			</a>

			<!-- Authors -->
			<div class="mb-2 flex flex-wrap gap-x-1 text-sm text-gray-600 dark:text-gray-300">
				{
					research.data.authors.map((author: string, idx: number) => (
						<span>
							<span class={idx === research.data.author_idx ? "font-semibold underline decoration-accent decoration-2 underline-offset-2" : ""}>
								{author}
							</span>
							{idx !== research.data.authors.length - 1 ? "," : ""}
						</span>
					))
				}
			</div>

			<!-- Description/Venue -->
			<p class="mb-4 text-sm italic text-gray-700 dark:text-gray-300">
				{research.data.description}
			</p>

			<!-- Icon-based Links -->
			<div class="flex flex-wrap gap-3">
				{
					Object.entries(research.data.links).map(([key, value]) => {
						const iconType = getIcon(key);
						const iconTitle = getIconTitle(key);
						const url = value as string;
						
						return (
							<a
								href={url}
								target={url.startsWith("/") ? "_self" : "_blank"}
								rel={url.startsWith("/") ? "" : "noopener noreferrer"}
								class="group/link flex items-center gap-2 rounded-full border border-gray-300 bg-gray-50 px-4 py-2 text-sm font-medium text-gray-700 transition-all hover:border-accent hover:bg-accent hover:text-white dark:border-gray-600 dark:bg-gray-700 dark:text-gray-200 dark:hover:border-accent-2 dark:hover:bg-accent-2"
								title={iconTitle}
							>
								<Icon name={iconType} class="h-4 w-4" />
								<span>{iconTitle}</span>
							</a>
						);
					})
				}
			</div>
		</div>
	</div>
</Element>
